{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/reactCrush/src/pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MyBlock from '../components/UI/block/MyBlock';\nimport { useFetching } from '../hooks/useFetching';\nimport PostService from '../API/PostService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\n    const response = await PostService.getById(params.id);\n  });\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(MyBlock, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: params.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(PostIdPage, \"YY7e0nMW8z+3qDO6UIfV3npYIHs=\", false, function () {\n  return [useParams, useFetching];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","MyBlock","useFetching","PostService","jsxDEV","_jsxDEV","PostIdPage","_s","params","post","setPost","fetchPostById","isLoading","error","response","getById","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Projects/reactCrush/src/pages/PostIdPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MyBlock from '../components/UI/block/MyBlock'\nimport { useFetching } from '../hooks/useFetching'\nimport PostService from '../API/PostService'\n\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState(null)\n    const [fetchPostById, isLoading, error] = useFetching( async () => {\n        const response = await PostService.getById(params.id)\n    })\n\n    useEffect(() => {\n\n    })\n\n  return (\n        <MyBlock>\n            <h2>{params.id}</h2>\n        </MyBlock>\n  )\n}\n\nexport default PostIdPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,gCAAgC;AACpD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,SAAS,EAAEC,KAAK,CAAC,GAAGX,WAAW,CAAE,YAAY;IAC/D,MAAMY,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAO,CAACP,MAAM,CAACQ,EAAE,CAAC;EACzD,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EAEJ,oBACMO,OAAA,CAACJ,OAAO;IAAAgB,QAAA,eACJZ,OAAA;MAAAY,QAAA,EAAKT,MAAM,CAACQ;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAElB,CAAC;AAAAd,EAAA,CAhBKD,UAAU;EAAA,QACGN,SAAS,EAEkBE,WAAW;AAAA;AAAAoB,EAAA,GAHnDhB,UAAU;AAkBhB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}