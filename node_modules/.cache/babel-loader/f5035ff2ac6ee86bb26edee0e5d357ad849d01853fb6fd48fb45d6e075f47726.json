{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/reactCrush/src/pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MyBlock from '../components/UI/block/MyBlock';\nimport { useFetching } from '../hooks/useFetching';\nimport PostService from '../API/PostService';\nimport MyLoader from '../components/UI/loader/MyLoader';\nimport CommentItem from '../components/Comment/CommentItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyBlock, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [post.id, \". \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyBlock, {\n      children: isComLoading ? /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map((comm, i) => /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: comm\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PostIdPage, \"yhVFi/dKHvoi/BwHUNtWcOvaQkM=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","MyBlock","useFetching","PostService","MyLoader","CommentItem","jsxDEV","_jsxDEV","Fragment","_Fragment","PostIdPage","_s","params","post","setPost","comments","setComments","fetchPostById","isLoading","error","id","response","getById","data","fetchComments","isComLoading","comError","getCommentsByPostId","children","fileName","_jsxFileName","lineNumber","columnNumber","title","body","map","comm","i","comment","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Projects/reactCrush/src/pages/PostIdPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MyBlock from '../components/UI/block/MyBlock'\nimport { useFetching } from '../hooks/useFetching'\nimport PostService from '../API/PostService'\nimport MyLoader from '../components/UI/loader/MyLoader'\nimport CommentItem from '../components/Comment/CommentItem'\n\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState({})\n    const [comments, setComments] = useState([])\n    const [fetchPostById, isLoading, error] = useFetching( async (id) => {\n        const response = await PostService.getById(id)\n        setPost(response.data)\n    })\n    const [fetchComments, isComLoading, comError] = useFetching( async (id) => {\n        const response = await PostService.getCommentsByPostId(id)\n        setComments(response.data)\n    })\n\n    useEffect(() => {\n        fetchPostById(params.id)\n        fetchComments(params.id)\n    }, [])\n\n  return (\n    <>\n        <MyBlock>\n            {isLoading\n                ? <MyLoader/>\n                : <div>\n                    <h2>{post.id}. {post.title}</h2>\n                    <p>{post.body}</p>\n                  </div>\n            }\n        </MyBlock>\n        <MyBlock>\n            {isComLoading\n                ? <MyLoader/>\n                : <div>\n                    {comments.map((comm, i) => \n                        <CommentItem key={i} comment={comm}/> )}\n                </div>\n            }\n        </MyBlock>\n    </>\n  )\n}\n\nexport default PostIdPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}