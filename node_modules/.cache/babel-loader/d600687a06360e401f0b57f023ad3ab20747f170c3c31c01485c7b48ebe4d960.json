{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/reactCrush/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../App.css\";\nimport PostList from \"../components/PostList\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport MyModal from \"../components/UI/modal/MyModal\";\nimport AccentButton from \"../components/UI/accentButton/AccentButton\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport PostService from \"../API/PostService\";\nimport MyLoader from \"../components/UI/loader/MyLoader\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport { useObserver } from \"../hooks/useObserver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const lastElement = useRef();\n  const observer = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1);\n  });\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  //получаем пост из дочернего компонента\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AccentButton, {\n      onClick: () => setModal(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost,\n        title: \"Create post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: '20px',\n        color: 'darkred'\n      },\n      children: [\"Error: \", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      page: page,\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"dlfzlNItu1v/6BKlos2ZUHmQWC0=\", false, function () {\n  return [usePosts, useFetching, useObserver];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PostList","PostForm","PostFilter","MyModal","AccentButton","usePosts","PostService","MyLoader","useFetching","getPageCount","Pagination","useObserver","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","lastElement","observer","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","create","title","style","textAlign","marginTop","color","remove","ref","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Projects/reactCrush/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"../App.css\";\nimport PostList from \"../components/PostList\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport MyModal from \"../components/UI/modal/MyModal\";\nimport AccentButton from \"../components/UI/accentButton/AccentButton\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport PostService from \"../API/PostService\";\nimport MyLoader from \"../components/UI/loader/MyLoader\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport { useObserver } from \"../hooks/useObserver\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const lastElement = useRef()\n  const observer = useRef()\n\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching( async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count']\n    setTotalPages(getPageCount(totalCount, limit))\n  })\n\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1)\n  })\n\n  useEffect(()=> {\n    fetchPosts(limit, page)\n  }, [page])\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  //получаем пост из дочернего компонента\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  const changePage = (page) => {\n    setPage(page)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <AccentButton onClick={() => setModal(true)}> \n        +\n      </AccentButton>\n\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} title=\"Create post\" />\n      </MyModal>\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      {postError && \n        <h3 style={{ textAlign: \"center\", marginTop: '20px', color: 'darkred', }}>Error: {postError}</h3>\n      }\n      \n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Posts\" />\n      <div ref={lastElement}/>\n\n      {isPostsLoading &&\n        <div className=\"center\"> <MyLoader/> </div>\n      }\n\n\n      <Pagination\n        totalPages={totalPages} \n        page={page} \n        changePage={changePage}\n      />\n\n    </div>\n  );\n}\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}