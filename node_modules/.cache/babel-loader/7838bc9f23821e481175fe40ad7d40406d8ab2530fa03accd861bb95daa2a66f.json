{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  _s();\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    var cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading]);\n};\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"names":["useEffect","useRef","useObserver","ref","canLoad","isLoading","callback","_s","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"sources":["/Users/mac/Documents/Projects/reactCrush/src/hooks/useObserver.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n    const observer = useRef();\n\n  useEffect(() => {\n    if(isLoading) return;\n    if(observer.current) observer.current.disconnect();\n\n    var cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback()\n      }\n    };\n    \n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current)\n  }, [isLoading])\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,OAAO,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC9D,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAGK,SAAS,EAAE;IACd,IAAGG,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACC,OAAO,CAACC,UAAU,CAAC,CAAC;IAElD,IAAIC,EAAE,GAAG,SAAAA,CAAUC,OAAO,EAAEJ,QAAQ,EAAE;MACpC,IAAII,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIT,OAAO,EAAE;QACxCE,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IAEDE,QAAQ,CAACC,OAAO,GAAG,IAAIK,oBAAoB,CAACH,EAAE,CAAC;IAC/CH,QAAQ,CAACC,OAAO,CAACM,OAAO,CAACZ,GAAG,CAACM,OAAO,CAAC;EACvC,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;AACjB,CAAC;AAAAE,EAAA,CAhBYL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}